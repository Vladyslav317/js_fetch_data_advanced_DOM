{"version":3,"sources":["scripts/main.js"],"names":["url","body","document","getPhones","fetch","then","response","ok","Error","status","statusText","json","elemPattern","className","title","phoneName","insertAdjacentHTML","fulfilledStatus","arr","filter","phone","map","elem","value","name","getFirstReceivedDetails","phones","Promise","race","getAllSuccessfulDetails","allSettled","phonesArr","getThreeFastestDetails","phoneList","all"],"mappings":";AAAA,aAEA,IAAMA,EACJ,wEACIC,EAAOC,SAASD,KAEtB,SAASE,IACAC,OAAAA,MAAMJ,GACVK,KAAK,SAAAC,GACA,IAACA,EAASC,GACNC,MAAAA,MAASF,GAAAA,OAAAA,EAASG,OAAYH,OAAAA,OAAAA,EAASI,aAGxCJ,OAAAA,EAASK,SAItB,SAASC,EAAYC,EAAWC,EAAOC,GACrCd,EAAKe,mBAAmB,aACRH,qBAAAA,OAAAA,EACNC,kBAAAA,OAAAA,EACDC,oBAAAA,OAAAA,EAHT,yBAQF,SAASE,EAAgBC,GAChBA,OAAAA,EACJC,OAAO,SAAAC,GAASA,MAAiB,cAAjBA,EAAMX,SACtBY,IAAI,SAAAC,GAAeA,MAAAA,OAAAA,OAAAA,EAAKC,MAAMC,QAGnC,SAASC,IACPtB,IACGE,KAAK,SAAAqB,GAAUC,OAAAA,QAAQC,KAAKF,KAC5BrB,KAAK,SAAAe,GAASR,OAAAA,EAAY,iBAAkB,iBAAkBQ,EAAMI,QAGzE,SAASK,IACP1B,IACGE,KAAK,SAAAqB,GAAUC,OAAAA,QAAQG,WAAWJ,KAClCrB,KAAK,SAAA0B,GACJnB,OAAAA,EAAY,iBAAkB,iBAC5BK,EAAgBc,MAGxB,SAASC,IACP7B,IACGE,KAAK,SAAA4B,GACGN,OAAAA,QAAQO,IAAI,CACjBP,QAAQC,KAAKK,EAAUZ,IAAI,SAAAD,GAASA,OAAAA,EAAMI,QAE1CG,QAAQC,KAAKK,EAAUZ,IAAI,SAAAD,GAAgBA,MAAAA,OAAAA,OAAAA,EAAMI,SAEjDG,QAAQC,KAAKK,EAAUZ,IAAI,SAAAD,GAAgBA,MAAAA,OAAAA,OAAAA,EAAMI,aAGpDnB,KAAK,SAAAqB,GAAUd,OAAAA,EAAY,iBAAkB,iBAAkBc,KAGpEvB,IACGE,KAAKoB,GACLpB,KAAKwB,GACLxB,KAAK2B","file":"main.b509b1f0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst url\r\n= 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\r\nconst body = document.body;\r\n\r\nfunction getPhones() {\r\n  return fetch(url)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw Error(`${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n}\r\n\r\nfunction elemPattern(className, title, phoneName) {\r\n  body.insertAdjacentHTML('afterbegin', `\r\n    <div class=\"${className}\">\r\n      <h1>${title}</h1>\r\n      <p>${phoneName}</p>\r\n    </div>\r\n  `);\r\n}\r\n\r\nfunction fulfilledStatus(arr) {\r\n  return arr\r\n    .filter(phone => phone.status === 'fulfilled')\r\n    .map(elem => `<br>${elem.value.name}`);\r\n}\r\n\r\nfunction getFirstReceivedDetails() {\r\n  getPhones()\r\n    .then(phones => Promise.race(phones))\r\n    .then(phone => elemPattern('first-received', 'First Received', phone.name));\r\n}\r\n\r\nfunction getAllSuccessfulDetails() {\r\n  getPhones()\r\n    .then(phones => Promise.allSettled(phones))\r\n    .then(phonesArr =>\r\n      elemPattern('all-successful', 'All Successful',\r\n        fulfilledStatus(phonesArr)));\r\n}\r\n\r\nfunction getThreeFastestDetails() {\r\n  getPhones()\r\n    .then(phoneList => {\r\n      return Promise.all([\r\n        Promise.race(phoneList.map(phone => phone.name)),\r\n\r\n        Promise.race(phoneList.map(phone => `<br>${phone.name}`)),\r\n\r\n        Promise.race(phoneList.map(phone => `<br>${phone.name}`)),\r\n      ]);\r\n    })\r\n    .then(phones => elemPattern('three-received', 'Three Received', phones));\r\n}\r\n\r\ngetPhones()\r\n  .then(getFirstReceivedDetails)\r\n  .then(getAllSuccessfulDetails)\r\n  .then(getThreeFastestDetails);\r\n"]}